plugins {
    id 'signing'
    id 'java'
    id 'maven-publish'
}

group = 'kiinse.plugins.api'
description = 'DarkWaterAPI'
version = '2.3.0-beta.2'
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url = uri('https://repo.papermc.io/repository/maven-public/') }
    maven { url = uri('https://oss.sonatype.org/content/groups/public/') }
    maven { url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/') }
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven { url = uri('https://repo.papermc.io/repository/maven-public/') }
}

dependencies {
    implementation 'com.vdurmont:semver4j:3.1.0'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.jooq:jooq:3.16.6'
    implementation 'org.jooq:jooq-meta:3.16.6'
    implementation 'org.jooq:jooq-codegen:3.16.6'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.postgresql:postgresql:42.3.6'
    implementation 'com.github.berkesa:moleculer-java:1.2.22'
    implementation 'com.github.berkesa:moleculer-java-web:1.3.5'
    implementation 'com.github.berkesa:datatree-core:1.1.2'
    implementation 'com.github.berkesa:datatree-promise:1.0.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.json:json:20220320'
    implementation 'org.springframework:spring-core:5.3.20'
    implementation 'com.auth0:java-jwt:4.0.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    compileOnly 'io.papermc.paper:paper-api:1.19.1-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.10.9'
}

publishing {
    repositories {
        maven {
            name = "KiinseRepository"
            url = version.contains("beta") ? "https://repo.kiinse.me/snapshots" : "https://repo.kiinse.me/releases"
            credentials {
                username System.getenv("USERNAME")
                password System.getenv("TOKEN")
            }
            authentication {basic(BasicAuthentication)}
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes["Main-Class"] = "kiinse.plugins.api.darkwaterapi.DarkWaterAPI"
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
